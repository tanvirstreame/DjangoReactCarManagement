{"ast":null,"code":"import _objectSpread from \"/home/tanvir/Desktop/Workstation/carmanagement_client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/tanvir/Desktop/Workstation/carmanagement_client/src/Components/CreateShowroom.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FormErrors } from './FormErrors';\n\nclass CreateShowRoomForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.state = {\n      name: '',\n      registrationNumber: '',\n      logoType: '',\n      contactInfo: '',\n      nameValid: false,\n      registrationNumberValid: false,\n      logoTypeValid: false,\n      contactInfoValid: false,\n      formErrors: {\n        name: '',\n        registrationNumber: '',\n        logoType: '',\n        contactInfo: ''\n      },\n      formValid: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let nameValid = this.state.nameValid;\n    let registrationNumberValid = this.state.registrationNumberValid;\n    let logoTypeValid = this.state.logoTypeValid;\n    let contactInfoValid = this.state.contactInfoValid;\n\n    switch (fieldName) {\n      case 'name':\n        nameValid = value.length != 0;\n        fieldValidationErrors.name = nameValid ? '' : 'can not be empty';\n        break;\n\n      case 'logoType':\n        logoTypeValid = value.length != 0;\n        fieldValidationErrors.logoTypeValid = logoTypeValid ? '' : 'can not be empty';\n        break;\n\n      case 'contactInfo':\n        contactInfoValid = value.length != 0;\n        fieldValidationErrors.contactInfo = contactInfoValid ? '' : 'can not be empty';\n        break;\n\n      case 'registrationNumber':\n        registrationNumberValid = value.length >= 6;\n        fieldValidationErrors.registrationNumber = registrationNumberValid ? '' : 'is too short';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      nameValid: nameValid,\n      registrationNumberValid: registrationNumberValid,\n      logoTypeValid: logoTypeValid,\n      contactInfoValid: contactInfoValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.nameValid && this.state.registrationNumberValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    fetch('http://localhost:8000/showroom/', {\n      method: 'POST',\n      body: data\n    });\n    this.name.value = '';\n    this.registrationNumber.value = '';\n    this.logoType.value = '';\n    this.contactInfo.value = '';\n  }\n\n  handleSelectValue() {\n    if (this.refs.showroom) {\n      return this.refs.showroom.value;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"CreateShowRoom\",\n      onSubmit: this.handleSubmit,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Create Showroom\"), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Show Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control shadow-none\",\n      ref: el => this.name = el,\n      value: this.state.name,\n      name: \"name\",\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Registration Number\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control shadow-none\",\n      ref: el => this.registrationNumber = el,\n      value: this.state.registrationNumber,\n      name: \"registrationNumber\",\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Logo Type\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control shadow-none\",\n      ref: el => this.logoType = el,\n      value: this.state.logoType,\n      name: \"logoType\",\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Contact Detail\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control shadow-none\",\n      ref: el => this.contactInfo = el,\n      value: this.state.contactInfo,\n      name: \"contactInfo\",\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      class: \"btn btn-info btn-block shadow-none\",\n      value: \"Create Show Room\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))))));\n  }\n\n  inputChangeHandler(e) {\n    let formFields = _objectSpread({}, this.state.formFields);\n\n    formFields[e.target.name] = e.target.value;\n    this.setState({\n      formFields\n    });\n  }\n\n  formHandler(formFields) {\n    axios.post('/api/register', formFields).then(function (response) {\n      console.log(response); //Perform action based on response\n    }).catch(function (error) {\n      console.log(error); //Perform action based on error\n    });\n  }\n\n}\n\nexport default CreateShowRoomForm;","map":{"version":3,"sources":["/home/tanvir/Desktop/Workstation/carmanagement_client/src/Components/CreateShowroom.js"],"names":["React","Component","axios","FormErrors","CreateShowRoomForm","constructor","props","handleUserInput","e","name","target","value","setState","validateField","state","registrationNumber","logoType","contactInfo","nameValid","registrationNumberValid","logoTypeValid","contactInfoValid","formErrors","formValid","handleSubmit","bind","fieldName","fieldValidationErrors","length","validateForm","errorClass","error","event","preventDefault","data","FormData","fetch","method","body","handleSelectValue","refs","showroom","render","el","inputChangeHandler","formFields","formHandler","post","then","response","console","log","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { FormErrors } from './FormErrors';\n\nclass CreateShowRoomForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      name:'',\n      registrationNumber:'',\n      logoType:'',\n      contactInfo:'',\n      nameValid: false,\n      registrationNumberValid: false,\n      logoTypeValid: false,\n      contactInfoValid: false,\n      formErrors: {name: '', registrationNumber: '',logoType: '',contactInfo: ''},\n      formValid: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value},\n                  () => { this.validateField(name, value) });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let nameValid = this.state.nameValid;\n    let registrationNumberValid = this.state.registrationNumberValid;\n    let logoTypeValid = this.state.logoTypeValid;\n    let contactInfoValid = this.state.contactInfoValid;\n\n\n    switch(fieldName) {\n      case 'name':\n        nameValid = value.length != 0;\n        fieldValidationErrors.name = nameValid ? '': 'can not be empty';\n        break;\n      case 'logoType':\n        logoTypeValid = value.length != 0;\n        fieldValidationErrors.logoTypeValid = logoTypeValid ? '': 'can not be empty';\n        break;\n      case 'contactInfo':\n        contactInfoValid = value.length != 0;\n        fieldValidationErrors.contactInfo = contactInfoValid ? '': 'can not be empty';\n        break;\n      case 'registrationNumber':\n        registrationNumberValid = value.length >= 6;\n        fieldValidationErrors.registrationNumber = registrationNumberValid ? '': 'is too short';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    nameValid: nameValid,\n                    registrationNumberValid : registrationNumberValid ,\n                    logoTypeValid:logoTypeValid,\n                    contactInfoValid:contactInfoValid,\n                  }, this.validateForm);\n  }\n\n\n  validateForm() {\n    this.setState({formValid: this.state.nameValid && this.state.registrationNumberValid});\n  }\n\n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n\n  \n  \n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    \n    fetch('http://localhost:8000/showroom/', {\n      method: 'POST',\n      body: data,\n    });\n     \n    this.name.value =''; \n    this.registrationNumber.value ='';\n    this.logoType.value =''; \n    this.contactInfo.value =''; \n    \n  }\n  \n  \n  handleSelectValue() {\n  if (this.refs.showroom){\n    return(this.refs.showroom.value);\n    }\n  }\n\n  render() {\n    return(\n            <div class=\"container\">\n              <div class=\"row\">\n                  <div class=\"col-md-8 offset-md-2\">\n                      <form id=\"CreateShowRoom\" onSubmit={this.handleSubmit} method=\"post\">\n                          <h4 class=\"text-center\">Create Showroom</h4>\n                          <div class=\"row\">\n                              <div class=\"col-md-8 offset-md-2\">\n                                  <label>Show Name</label>\n                                  <input type=\"text\" class=\"form-control shadow-none\" ref={el => this.name= el} value={this.state.name} name=\"name\" onChange={this.handleUserInput} />\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-8 offset-md-2\">\n                                  <label>Registration Number</label>\n                                  <input type=\"text\" class=\"form-control shadow-none\"  ref={el => this.registrationNumber= el} value={this.state.registrationNumber} name=\"registrationNumber\" onChange={this.handleUserInput} />\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-8 offset-md-2\">\n                                  <label>Logo Type</label>\n                                  <input type=\"text\" class=\"form-control shadow-none\" ref={el => this.logoType = el} value={this.state.logoType} name=\"logoType\" onChange={this.handleUserInput} />\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-8 offset-md-2\">\n                                  <label>Contact Detail</label>\n                                  <input type=\"text\" class=\"form-control shadow-none\" ref={el => this.contactInfo = el} value={this.state.contactInfo} name=\"contactInfo\" onChange={this.handleUserInput} />\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-8 offset-md-2\">\n                                  <input type=\"submit\" class=\"btn btn-info btn-block shadow-none\" value=\"Create Show Room\" disabled={!this.state.formValid}/>\n                              </div>\n                          </div>\n                          <div className=\"panel panel-default\">\n                              <div class=\"col-md-8 offset-md-2\">\n                                  <FormErrors formErrors={this.state.formErrors} />\n                              </div>\n                          </div>\n                      </form>\n                  </div>\n              </div>\n            </div>\n    );\n  }\n\n  inputChangeHandler(e) {\n   let formFields = {...this.state.formFields};\n   formFields[e.target.name] = e.target.value;\n   this.setState({\n    formFields\n   });\n  }\n\n  formHandler(formFields) {\n   axios.post('/api/register', formFields)\n     .then(function(response){\n       console.log(response);\n       //Perform action based on response\n   })\n     .catch(function(error){\n       console.log(error);\n       //Perform action based on error\n     });\n  }\n}\n\nexport default CreateShowRoomForm"]},"metadata":{},"sourceType":"module"}