{"ast":null,"code":"import _objectSpread from \"/home/tanvir/Desktop/Workstation/carmanagement_client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/tanvir/Desktop/Workstation/carmanagement_client/src/Components/CreateOwner.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\n\nclass CreateOwner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      usernamevalid: false,\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let usernameValid = this.state.usernameValid;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case 'username':\n        usernameValid = value.length != 0;\n        fieldValidationErrors.username = usernameValid ? '' : 'can not be empty';\n        break;\n\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length != 0;\n        fieldValidationErrors.password = passwordValid ? '' : 'can not be empty';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      usernameValid: usernameValid,\n      emailValid: emailValid,\n      lpasswordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.nameValid && this.state.registrationNumberValid && this.state.logoTypeValid && this.state.contactInfoValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const name = ReactDOM.findDOMNode(this.Username).value;\n    const email = ReactDOM.findDOMNode(this.Email).value;\n    const password = ReactDOM.findDOMNode(this.Password).value;\n    const errors = validate(name, email, password);\n\n    if (errors.length > 0) {\n      this.setState({\n        errors\n      });\n      return;\n    }\n\n    const data = new FormData(event.target);\n    fetch('http://localhost:8000/showroomowner/', {\n      method: 'POST',\n      body: data\n    });\n    this.Username.value = '';\n    this.Email.value = '';\n    this.Password.value = '';\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"CreateOwner\",\n      onSubmit: this.handleSubmit,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Create Owner\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"User Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control shadow-none\",\n      ref: el => this.Username = el,\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control shadow-none\",\n      ref: el => this.Email = el,\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control shadow-none\",\n      ref: el => this.Password = el,\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block shadow-none\",\n      value: \"Create Owner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, errors.map(error => React.createElement(\"p\", {\n      className: \"text-danger\",\n      key: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Error: \", error))))))));\n  }\n\n  inputChangeHandler(e) {\n    let formFields = _objectSpread({}, this.state.formFields);\n\n    formFields[e.target.name] = e.target.value;\n    this.setState({\n      formFields\n    });\n  }\n\n  formHandler(formFields) {\n    axios.post('/api/register', formFields).then(function (response) {\n      console.log(response); //Perform action based on response\n    }).catch(function (error) {\n      console.log(error); //Perform action based on error\n    });\n  }\n\n}\n\nexport default CreateOwner;","map":{"version":3,"sources":["/home/tanvir/Desktop/Workstation/carmanagement_client/src/Components/CreateOwner.js"],"names":["React","Component","axios","ReactDOM","CreateOwner","constructor","props","handleUserInput","e","name","target","value","setState","validateField","state","username","email","password","formErrors","usernamevalid","emailValid","passwordValid","formValid","handleSubmit","bind","fieldName","fieldValidationErrors","usernameValid","length","match","lpasswordValid","validateForm","nameValid","registrationNumberValid","logoTypeValid","contactInfoValid","errorClass","error","event","preventDefault","findDOMNode","Username","Email","Password","errors","validate","data","FormData","fetch","method","body","render","el","map","inputChangeHandler","formFields","formHandler","post","then","response","console","log","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\n\nclass CreateOwner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username:\"\",\n      email:\"\",\n      password:\"\",\n      formErrors: {username:'',email: '', password: ''},\n      usernamevalid:false,\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    \n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value},\n                  () => { this.validateField(name, value) });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let usernameValid = this.state.usernameValid;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch(fieldName) {\n      case 'username':\n        usernameValid= value.length != 0;\n        fieldValidationErrors.username = usernameValid ? '': 'can not be empty';\n        break;\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n      case 'password':\n        passwordValid = value.length != 0;\n        fieldValidationErrors.password= passwordValid ? '': 'can not be empty';\n        break;\n      default:\n        break;\n    }\n    this.setState({formErrors: fieldValidationErrors,\n                    usernameValid: usernameValid,\n                    emailValid : emailValid ,\n                    lpasswordValid:passwordValid,\n                  }, this.validateForm);\n  }\n\n\n  validateForm() {\n    this.setState({formValid: this.state.nameValid && this.state.registrationNumberValid && this.state.logoTypeValid && this.state.contactInfoValid});\n  }\n\n  errorClass(error) {\n    return(error.length === 0 ? '' : 'has-error');\n  }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const name = ReactDOM.findDOMNode(this.Username).value;\n    const email = ReactDOM.findDOMNode(this.Email).value;\n    const password = ReactDOM.findDOMNode(this.Password).value;\n    const errors = validate(name, email, password);\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n    const data = new FormData(event.target);\n    fetch('http://localhost:8000/showroomowner/', {\n      method: 'POST',\n      body: data,\n    });\n     this.Username.value ='';\n     this.Email.value = '';\n     this.Password.value = '';\n  }\n\n  render() {\n    const { errors } = this.state;\n    return(\n            <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-md-8 offset-md-2\">\n                      <form id=\"CreateOwner\" onSubmit={this.handleSubmit} method=\"post\">\n                          <h4 className=\"text-center\">Create Owner</h4>\n                          <div className=\"row\">\n                              <div className=\"col-md-8 offset-md-2\">\n                                  <label>User Name</label>\n                                  <input type=\"text\" className=\"form-control shadow-none\" ref={el => this.Username = el} name=\"username\"/>\n                              </div>\n                          </div>\n                          <div className=\"row\">\n                              <div className=\"col-md-8 offset-md-2\">\n                                  <label>Email</label>\n                                  <input type=\"text\" className=\"form-control shadow-none\" ref={el => this.Email = el} name=\"email\"/>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div className=\"col-md-8 offset-md-2\">\n                                  <label>Password</label>\n                                  <input type=\"text\" className=\"form-control shadow-none\" ref={el => this.Password= el} name=\"password\"/>\n                              </div>\n                          </div>\n                          <div className=\"row\">\n                              <div className=\"col-md-8 offset-md-2\">\n                                  <input type=\"submit\" className=\"btn btn-info btn-block shadow-none\" value=\"Create Owner\"/>\n                              </div>\n                          </div>\n                          <div className=\"row\">\n                              <div className=\"col-md-8 offset-md-2\">\n                              {errors.map(error => (\n                                <p className=\"text-danger\" key={error}>Error: {error}</p>\n                              ))}\n                              </div>\n                          </div>\n                      </form>\n                     \n                  </div>\n              </div>\n            </div>\n    );\n  }\n\n  inputChangeHandler(e) {\n   let formFields = {...this.state.formFields};\n   formFields[e.target.name] = e.target.value;\n   this.setState({\n    formFields\n   });\n  }\n\n  formHandler(formFields) {\n   axios.post('/api/register', formFields)\n     .then(function(response){\n       console.log(response);\n       //Perform action based on response\n   })\n     .catch(function(error){\n       console.log(error);\n       //Perform action based on error\n     });\n  }\n}\n\nexport default CreateOwner "]},"metadata":{},"sourceType":"module"}